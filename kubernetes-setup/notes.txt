List of files 
create-join-token.sh  get_helm.sh  join-cluster.sh  k8s-slaves.sh  master-k8s.sh 


#Run below commands in order in master 
sh master-k8s.sh  # Once kubernetes is installed generate the join token to join slave nodes 

sh create-join-token.sh


# Install helm
./get_helm.sh 


#Run below command on slaves 
sh k8s-slave.sh  # Run this on slave1 and slave2 

#Join kube cluster by running the join-cluster.sh 
sh join-cluster.sh  


helm install postgres bitnami/postgresql --set persistence.existingClaim=postgresql-pv-claim --set volumePermissions.enabled=true

rbabu@k8s-master:/nfsstorage/automation-scripts/postgres-deployment/bitname-postgres$ kubectl get pvc 
NAME                  STATUS   VOLUME          CAPACITY   ACCESS MODES   STORAGECLASS   AGE
postgresql-pv-claim   Bound    postgresql-pv   5Gi        RWO            manual         10s
rbabu@k8s-master:/nfsstorage/automation-scripts/postgres-deployment/bitname-postgres$ helm install postgres bitnami/postgresql --set persistence.existingClaim=postgresql-pv-claim --set volumePermissions.enabled=true
NAME: postgres
LAST DEPLOYED: Sat Jun  1 09:54:41 2024
NAMESPACE: default
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
CHART NAME: postgresql
CHART VERSION: 15.5.1
APP VERSION: 16.3.0

** Please be patient while the chart is being deployed **

PostgreSQL can be accessed via port 5432 on the following DNS names from within your cluster:

    postgres-postgresql.default.svc.cluster.local - Read/Write connection

To get the password for "postgres" run:

    export POSTGRES_PASSWORD=$(kubectl get secret --namespace default postgres-postgresql -o jsonpath="{.data.postgres-password}" | base64 -d)

To connect to your database run the following command:

    kubectl run postgres-postgresql-client --rm --tty -i --restart='Never' --namespace default --image docker.io/bitnami/postgresql:16.3.0-debian-12-r12 --env="PGPASSWORD=$POSTGRES_PASSWORD" \
      --command -- psql --host postgres-postgresql -U postgres -d postgres -p 5432

    > NOTE: If you access the container using bash, make sure that you execute "/opt/bitnami/scripts/postgresql/entrypoint.sh /bin/bash" in order to avoid the error "psql: local user with ID 1001} does not exist"

To connect to your database from outside the cluster execute the following commands:

    kubectl port-forward --namespace default svc/postgres-postgresql 5432:5432 &
    PGPASSWORD="$POSTGRES_PASSWORD" psql --host 127.0.0.1 -U postgres -d postgres -p 5432

WARNING: The configured password will be ignored on new installation in case when previous PostgreSQL release was deleted through the helm command. In that case, old PVC will have an old password, and setting it through helm won't take effect. Deleting persistent volumes (PVs) will solve the issue.

WARNING: There are "resources" sections in the chart not set. Using "resourcesPreset" is not recommended for production. For production installations, please set the following values according to your workload needs:
  - primary.resources
  - readReplicas.resources
  - volumePermissions.resources
+info https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
rbabu@k8s-master:/nfsstorage/automation-scripts/postgres-deployment/bitname-postgres$


link - https://phoenixnap.com/kb/postgresql-kubernetes
